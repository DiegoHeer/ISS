import xlwings as xw
import pymsgbox
import pandas as pd
import os
from os.path import dirname
import quickfs_scraping


def get_fs_dir_path():
    # This function gets the directory where the financial statements generated by
    # quickfs_scraping module are
    module_path = dirname(dirname(quickfs_scraping.__file__))

    return os.path.join(module_path, 'financial_files', 'excel')


class UpdateTable:
    def __init__(self, ticker):
        self.ticker = ticker
        self.wb = xw.Book.caller()
        self.wb_path = self.wb.fullname
        self.screener_ws = self.wb.sheets['Screener'].api
        self.watchlist_ws = self.wb.sheets['Watchlist'].api
        self.portfolio_ws = self.wb.sheets['Portfolio'].api
        self.screener_table = self.screener_ws.ListObjects("Screener")
        self.watchlist_table = self.watchlist_ws.ListObjects("Watchlist")
        self.fs_dir = get_fs_dir_path()

        self.ws = None
        self.table = None
        self.ticker_list = list()

    def __enter__(self):
        return self

    def __exit__(self, exc_type, exc_val, exc_tb):
        pass

    def selected_table(self, sheet_name):
        # Select the correct sheet where the extraction of tickers will happen
        if sheet_name.lower() == 'watchlist':
            self.ws = self.watchlist_ws
            self.table = self.watchlist_table
        else:
            self.ws = self.screener_ws
            self.table = self.screener_table

    def table_to_ticker_list(self, sheet_name):
        self.selected_table(sheet_name)

        for i in range(1, self.table.ListRows.Count):
            ticker = self.table.ListColumns('Ticker').DataBodyRange(i).Value
            status = self.table.ListColumns('Status').DataBodyRange(i).Value

            if status != 'Updated':
                self.ticker_list.append(ticker)

        pymsgbox.confirm(self.ticker_list)

        return self.ticker_list

    def get_fs_excel_path(self):
        return os.path.join(self.fs_dir, self.ticker + ".xlsx")

    def open_fs_excel_file(self):
        excel_file = self.get_fs_excel_path()
        os.startfile(excel_file)

    # TODO: Make these functions
    def extract_fs_data(self):
        pass

    def data_to_table(self):
        pass

    # # Table to pandas
    # df = self.wb.Range('A1').expand().options(pd.DataFrame).value
    # print(df.head())
    #
    # # Usage of api to use vba like syntax in Python
    # pymsgbox.confirm(self.screener_table.ListRows.Count)
    # # pymsgbox.confirm(self.wb_path)
    # # print(self.wb_path)
